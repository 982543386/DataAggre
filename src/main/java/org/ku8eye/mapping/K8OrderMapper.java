package org.ku8eye.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.K8Order;

public interface K8OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Delete({
        "delete from k8order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Insert({
        "insert into k8order (id, k8order_id, ",
        "create_time, k8order_type, ",
        "status, user_id, ",
        "start_time, end_time)",
        "values (#{id,jdbcType=INTEGER}, #{k8orderId,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{k8orderType,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, ",
        "#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})"
    })
    int insert(K8Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Select({
        "select",
        "id, k8order_id, create_time, k8order_type, status, user_id, start_time, end_time",
        "from k8order",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="k8order_type", property="k8orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP)
    })
    K8Order selectByPrimaryKey(Integer id);
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Select({
        "select",
        " user_id",
        "from k8order",
        "where k8order_id = #{k8orderId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
    })
    String selectUserByk8orderId(String k8order_id);

    
    @Select({
        "select",
        "id, k8order_id, create_time, k8order_type, status, user_id, start_time, end_time",
        "from k8order",
        "where user_id= #{user,jdbcType=VARCHAR}",
        "order by  start_time desc"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="k8order_type", property="k8orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<K8Order> selectByUser(String user);

    /**
     * This method was generated by MyBatis Generator.
     * 
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Select({
        "select",
        "id, k8order_id, create_time, k8order_type, status, user_id, start_time, end_time",
        "from k8order",
        "order by  start_time desc"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="k8order_type", property="k8orderType", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<K8Order> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order
     *
     * @mbg.generated Mon Jul 31 15:25:22 CST 2017
     */
    @Update({
        "update k8order",
        "set k8order_id = #{k8orderId,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "k8order_type = #{k8orderType,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(K8Order record);
    
    @Select({
        "select",
       "count(k8order_id)",
        "from k8order",
        "where user_id = #{user,jdbcType=VARCHAR} and status = 2"
    })
    int countByUser(String user);
    
    
   @Select({
        "select",
       "count(k8order_id)",
        "from k8order",
        "where status = 2"
    }) 
    int countAllOrder( );
}