package org.ku8eye.mapping;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.K8OrderApp;
import org.ku8eye.domain.K8OrderBigdata;

public interface K8OrderAppMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_app
     *
     * @mbg.generated Thu Sep 14 16:33:04 CST 2017
     */
    @Delete({
        "delete from k8order_app",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_app
     *
     * @mbg.generated Thu Sep 14 16:33:04 CST 2017
     */
    @Insert({
        "insert into k8order_app (id, mode, ",
        "zone, type, version, ",
        "cluster_count, resource_type, ",
        "storage_type, disk_space, ",
        "remark, security, ",
        "k8order_id, user_id, ",
        "remark_admin, additional_service, ",
        "worker_number)",
        "values (#{id,jdbcType=INTEGER}, #{mode,jdbcType=INTEGER}, ",
        "#{zone,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, ",
        "#{clusterCount,jdbcType=INTEGER}, #{resourceType,jdbcType=INTEGER}, ",
        "#{storageType,jdbcType=INTEGER}, #{diskSpace,jdbcType=INTEGER}, ",
        "#{remark,jdbcType=VARCHAR}, #{security,jdbcType=VARCHAR}, ",
        "#{k8orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{remarkAdmin,jdbcType=VARCHAR}, #{additionalService,jdbcType=INTEGER}, ",
        "#{workerNumber,jdbcType=INTEGER})"
    })
    int insert(K8OrderApp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_app
     *
     * @mbg.generated Thu Sep 14 16:33:04 CST 2017
     */
    @Select({
        "select",
        "id, mode, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "remark, security, k8order_id, user_id, remark_admin, additional_service, worker_number",
        "from k8order_app",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
        @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
        @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
        @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
        @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR),
        @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
        @Result(column="worker_number", property="workerNumber", jdbcType=JdbcType.INTEGER)
    })
    K8OrderApp selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_app
     *
     * @mbg.generated Thu Sep 14 16:33:04 CST 2017
     */
    @Select({
        "select",
        "id, mode, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "remark, security, k8order_id, user_id, remark_admin, additional_service, worker_number",
        "from k8order_app"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
        @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
        @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
        @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
        @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR),
        @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
        @Result(column="worker_number", property="workerNumber", jdbcType=JdbcType.INTEGER)
    })
    List<K8OrderApp> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_app
     *
     * @mbg.generated Thu Sep 14 16:33:04 CST 2017
     */
    @Update({
        "update k8order_app",
        "set mode = #{mode,jdbcType=INTEGER},",
          "zone = #{zone,jdbcType=INTEGER},",
          "type = #{type,jdbcType=INTEGER},",
          "version = #{version,jdbcType=VARCHAR},",
          "cluster_count = #{clusterCount,jdbcType=INTEGER},",
          "resource_type = #{resourceType,jdbcType=INTEGER},",
          "storage_type = #{storageType,jdbcType=INTEGER},",
          "disk_space = #{diskSpace,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "security = #{security,jdbcType=VARCHAR},",
          "k8order_id = #{k8orderId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "remark_admin = #{remarkAdmin,jdbcType=VARCHAR},",
          "additional_service = #{additionalService,jdbcType=INTEGER},",
          "worker_number = #{workerNumber,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(K8OrderApp record);
    
    
    @Update({
        "update k8order_app a,k8order b",
        "set b.status = #{status,jdbcType=INTEGER},",
        "remark_admin = #{remarkAdmin,jdbcType=VARCHAR},",
        "b.start_time = #{createTime,jdbcType=TIMESTAMP}",
        "where a.k8order_id = #{k8orderId,jdbcType=VARCHAR} and a.k8order_id=b.k8order_id"
    })
    int updateByK8OrderId(K8OrderApp record);
    
    
    
    
    @Select({
        "select",
        "id, mode, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "remark, security, k8order_id, user_id, remark_admin, additional_service, worker_number",
        "from k8order_app",
        "where k8order_id = #{orderId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
        @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
        @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
        @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
        @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR),
        @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
        @Result(column="worker_number", property="workerNumber", jdbcType=JdbcType.INTEGER)
    })
    K8OrderApp selectByOrderId(String orderId);
   
}
