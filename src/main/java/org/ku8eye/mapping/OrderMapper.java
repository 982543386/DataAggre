package org.ku8eye.mapping;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.cudcos.model.order.UserOrder;

public interface OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_project
     *
     * @mbggenerated
     */
    @Delete({
        "delete from user_order",
        "where order_id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_project
     *
     * @mbggenerated
     */
    @Insert({
        "insert into user_order ( order_no, ",
        "tenant_id, user_id, status, create_time, ",
        "update_time, remark, ",
        "start_time, end_time, zone_id )",
        "values (#{order.orderNo,jdbcType=VARCHAR},#{order.tenantId,jdbcType=INTEGER}, #{order.userId,jdbcType=INTEGER}, ",
        "#{order.status,jdbcType=TINYINT}, #{order.createTime,jdbcType=TIMESTAMP}, #{order.updateTime,jdbcType=TIMESTAMP}, ",
        "#{order.remark,jdbcType=VARCHAR}, #{order.startTime,jdbcType=TIMESTAMP}, ",
        "#{order.endTime,jdbcType=TIMESTAMP},#{order.zoneId,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "order.orderId")
    int insert(@Param("order") UserOrder order);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_project
     *
     * @mbggenerated
     */
    @Select({
    	"select",
        " a.order_id, a.order_no, a.tenant_id, a.user_id, a.status, a.create_time, a.update_time, a.remark, a.start_time,a.end_time,b.name, a.zone_id ",
        "from user_order a,tenant b ",
        "where a.tenant_id = b.id and  a.order_id = #{id,jdbcType=INTEGER}"
    })
    @Results({
    	@Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="tenantName", jdbcType=JdbcType.VARCHAR),
        @Result(column="zone_id", property="zoneId", jdbcType=JdbcType.INTEGER)

    })
    UserOrder selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_project
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "a.order_id, a.order_no, a.tenant_id,a.user_id, a.status, a.create_time, a.update_time, a.remark, a.start_time, a.end_time,b.name",
        "from user_order a,tenant b where a.tenant_id = b.id order by a.create_time desc"
    })
    @Results({
    	@Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
    	@Result(column="name", property="tenantName", jdbcType=JdbcType.VARCHAR)
    })
    List<UserOrder> selectAll();

    
    @Select({
    	"select",
        "a.order_id, a.order_no,a.tenant_id, a.user_id, a.status, a.create_time, a.update_time, a.remark, a.start_time, a.end_time,b.name",
        "from user_order a,tenant b  where a.user_id = #{owner,jdbcType=VARCHAR} and a.tenant_id = b.id  order by a.create_time desc"
    })
    @Results({
    	@Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="name", property="tenantName", jdbcType=JdbcType.VARCHAR)
    })
    List<UserOrder> selectByOwner(String owner);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_order
     *
     * @mbg.generated Wed Nov 30 15:53:00 CST 2016
     */
    @Update({
        "update user_order",
        "set order_no = #{orderNo,jdbcType=VARCHAR},",
          "tenant_id = #{tenantId,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=TINYINT},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "zone_id = #{zoneId,jdbcType=INTEGER}",
        "where order_id = #{orderId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserOrder record);
    
}