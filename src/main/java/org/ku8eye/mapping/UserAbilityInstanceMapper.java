package org.ku8eye.mapping;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.UserAbilityInstance;

public interface UserAbilityInstanceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_ability_instance
     *
     * @mbg.generated Tue Nov 29 18:35:23 CST 2016
     */
    @Delete({
        "delete from user_ability_instance",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);
    
    
    @Delete({
        "delete from user_ability_instance",
        "where order_id = #{orderId,jdbcType=INTEGER}"
    })
    int deleteAbilityInstance(Integer orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_ability_instance
     *
     * @mbg.generated Tue Nov 29 18:35:23 CST 2016
     */
    @Insert({
        "insert into user_ability_instance (id, user_id, ",
        "ability_id, ability_name, ",
        "ability_type, deliver_describe, ",
        "order_id, ability_instance, ",
        "create_time, start_time, ",
        "end_time, zone_id)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, ",
        "#{abilityId,jdbcType=VARCHAR}, #{abilityName,jdbcType=VARCHAR}, ",
        "#{abilityType,jdbcType=INTEGER}, #{deliverDescribe,jdbcType=VARCHAR}, ",
        "#{orderId,jdbcType=INTEGER}, #{abilityInstance,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, ",
        "#{endTime,jdbcType=TIMESTAMP}, #{zoneId,jdbcType=INTEGER})"
    })
    int insert(UserAbilityInstance record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_ability_instance
     *
     * @mbg.generated Tue Nov 29 18:35:23 CST 2016
     */
    @Select({
        "select",
        "id, user_id, ability_id, ability_name, ability_type, deliver_describe, order_id, ",
        "ability_instance, create_time, start_time, end_time, zone_id",
        "from user_ability_instance",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_id", property="abilityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_name", property="abilityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_type", property="abilityType", jdbcType=JdbcType.INTEGER),
        @Result(column="deliver_describe", property="deliverDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_instance", property="abilityInstance", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="zone_id", property="zoneId", jdbcType=JdbcType.INTEGER)
    })
    UserAbilityInstance selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_ability_instance
     *
     * @mbg.generated Tue Nov 29 18:35:23 CST 2016
     */
    @Select({
        "select",
        "a.id, a.user_id, a.ability_id, a.ability_name, a.ability_type, a.deliver_describe, a.order_id, ",
        "a.ability_instance, a.create_time, a.start_time, a.end_time, a.zone_id,b.ability_desc,a.ability_status ",
        "from user_ability_instance a,dcos_ability_catalog b where a.ability_id = b.ability_id order by a.id desc "
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_id", property="abilityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_name", property="abilityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_type", property="abilityType", jdbcType=JdbcType.INTEGER),
        @Result(column="deliver_describe", property="deliverDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_instance", property="abilityInstance", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="zone_id", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_desc", property="abilityDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_status", property="abilityStatus", jdbcType=JdbcType.VARCHAR)
    })
    List<UserAbilityInstance> selectAll();

    
    @Select({
    	"select",
    	 "a.id, a.user_id, a.ability_id, a.ability_name, a.ability_type, a.deliver_describe, a.order_id, ",
         "a.ability_instance, a.create_time, a.start_time, a.end_time, a.zone_id,b.ability_desc,a.ability_status ",
        "from user_ability_instance a,dcos_ability_catalog b where a.ability_id = b.ability_id and a.user_id = #{owner,jdbcType=VARCHAR} order by a.id desc  "
    })
    @Results({
    	@Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_id", property="abilityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_name", property="abilityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_type", property="abilityType", jdbcType=JdbcType.INTEGER),
        @Result(column="deliver_describe", property="deliverDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_instance", property="abilityInstance", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="zone_id", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_desc", property="abilityDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_status", property="abilityStatus", jdbcType=JdbcType.VARCHAR)
    })
    List<UserAbilityInstance> selectByOwner(String owner);
    
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_ability_instance
     *
     * @mbg.generated Tue Nov 29 18:35:23 CST 2016
     */
    @Update({
        "update user_ability_instance",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "ability_id = #{abilityId,jdbcType=VARCHAR},",
          "ability_name = #{abilityName,jdbcType=VARCHAR},",
          "ability_type = #{abilityType,jdbcType=INTEGER},",
          "deliver_describe = #{deliverDescribe,jdbcType=VARCHAR},",
          "order_id = #{orderId,jdbcType=INTEGER},",
          "ability_instance = #{abilityInstance,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "zone_id = #{zoneId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserAbilityInstance record);
    
    @Update({
        "update user_ability_instance",
        " set ability_status = #{abilityStatus,jdbcType=INTEGER} ",
        "where order_id = #{orderId,jdbcType=INTEGER}"
    })
    int updateByOrder(UserAbilityInstance userAbilityInstance);
    
    @Select({
        "select",
        "a.id, a.user_id, a.ability_id, a.ability_name, a.ability_type, a.deliver_describe, a.order_id, ",
        "a.ability_instance, a.create_time, a.start_time, a.end_time, a.zone_id, b.create_url, b.ability_desc",
        "from user_ability_instance a,dcos_ability_catalog b  where a.ability_id = b.ability_id and  a.order_id = #{orderId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_id", property="abilityId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_name", property="abilityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_type", property="abilityType", jdbcType=JdbcType.INTEGER),
        @Result(column="deliver_describe", property="deliverDescribe", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="ability_instance", property="abilityInstance", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="start_time", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_time", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="zone_id", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_url", property="createUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="ability_desc", property="abilityDesc", jdbcType=JdbcType.VARCHAR)
    })
    List<UserAbilityInstance> selectByOrder(@Param("orderId")int orderId);
    
    @Select({
    	"select",
        "a.id, a.user_id, a.ability_id, a.ability_name, a.ability_type, a.deliver_describe, a.order_id, ",
        "a.ability_instance, a.create_time, a.start_time, a.end_time, a.zone_id ",
        " FROM user_ability_instance a where a.order_id = #{orderId,jdbcType=INTEGER} and a.deliver_describe is null"
    })
    @Results({
        @Result(column="nums", property="nums", jdbcType=JdbcType.INTEGER)
    })
    List<UserAbilityInstance> selectNum(Integer orderId);
    
}