package org.ku8eye.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.YamlRegistry;


public interface YamlRegistryMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table yaml_registry
	 * @mbg.generated  Sun Apr 16 23:57:52 CST 2017
	 */
	@Delete({ "delete from yaml_registry", "where ID = #{id,jdbcType=TINYINT}" })
	int deleteByPrimaryKey(Byte id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table yaml_registry
	 * @mbg.generated  Sun Apr 16 23:57:52 CST 2017
	 */
	@Insert({ "insert into yaml_registry (ID, title, ", "date, author, ", "extension, content)",
			"values (#{yamlRegistry.id,jdbcType=TINYINT}, #{yamlRegistry.title,jdbcType=VARCHAR}, ",
			"#{yamlRegistry.date,jdbcType=TIMESTAMP}, #{yamlRegistry.author,jdbcType=VARCHAR}, ",
			"#{yamlRegistry.extension,jdbcType=VARCHAR}, #{yamlRegistry.content,jdbcType=LONGVARCHAR})" })
	@Options(useGeneratedKeys = true, keyProperty = "yamlRegistry.id")
	int insert(@Param("yamlRegistry") YamlRegistry yamlRegistry);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table yaml_registry
	 * @mbg.generated  Sun Apr 16 23:57:52 CST 2017
	 */
	@Select({ "select", "ID, title, date, author, extension, content", "from yaml_registry",
			"where ID = #{id,jdbcType=TINYINT}" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.TINYINT, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "date", property = "date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "author", property = "author", jdbcType = JdbcType.VARCHAR),
			@Result(column = "extension", property = "extension", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.LONGVARCHAR) })
	List<YamlRegistry> selectByPrimaryKey(Byte id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table yaml_registry
	 * @mbg.generated  Sun Apr 16 23:57:52 CST 2017
	 */
	@Select({ "select", "ID, title, date, author, extension, content", "from yaml_registry" })
	@Results({ @Result(column = "ID", property = "id", jdbcType = JdbcType.TINYINT, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "date", property = "date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "author", property = "author", jdbcType = JdbcType.VARCHAR),
			@Result(column = "extension", property = "extension", jdbcType = JdbcType.VARCHAR),
			@Result(column = "content", property = "content", jdbcType = JdbcType.LONGVARCHAR) })
	List<YamlRegistry> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table yaml_registry
	 * @mbg.generated  Sun Apr 16 23:57:52 CST 2017
	 */
	@Update({ "update yaml_registry", "set title = #{title,jdbcType=VARCHAR},", "date = #{date,jdbcType=TIMESTAMP},",
			"author = #{author,jdbcType=VARCHAR},", "extension = #{extension,jdbcType=VARCHAR},",
			"content = #{content,jdbcType=LONGVARCHAR}", "where ID = #{id,jdbcType=TINYINT}" })
	int updateByPrimaryKey(YamlRegistry record);
}