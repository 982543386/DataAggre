package org.ku8eye.mapping;

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.TaskLog;

public interface TaskLogMapper {
	/**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from task_log",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into task_log (ID, JOB_ID, ",
        "START_TIME, END_TIME, ",
        "STATUS, HINT, LAST_UPDATED)",
        "values (#{id,jdbcType=VARCHAR}, #{jobId,jdbcType=INTEGER}, ",
        "#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=TINYINT}, #{hint,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP})"
    })
    int insert(TaskLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, JOB_ID, START_TIME, END_TIME, STATUS, HINT, LAST_UPDATED",
        "from task_log",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="JOB_ID", property="jobId", jdbcType=JdbcType.INTEGER),
        @Result(column="START_TIME", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="END_TIME", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="HINT", property="hint", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
    TaskLog selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, JOB_ID, START_TIME, END_TIME, STATUS, HINT, LAST_UPDATED",
        "from task_log"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="JOB_ID", property="jobId", jdbcType=JdbcType.INTEGER),
        @Result(column="START_TIME", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="END_TIME", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="HINT", property="hint", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TaskLog> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_log
     *
     * @mbggenerated
     */
    @Update({
        "update task_log",
        "set JOB_ID = #{jobId,jdbcType=VARCHAR},",
          "START_TIME = #{startTime,jdbcType=TIMESTAMP},",
          "END_TIME = #{endTime,jdbcType=TIMESTAMP},",
          "STATUS = #{status,jdbcType=TINYINT},",
          "HINT = #{hint,jdbcType=VARCHAR},",
          "LAST_UPDATED = #{lastUpdated,jdbcType=TIMESTAMP}",
        "where ID = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TaskLog record);

    @Delete({
        "delete from task_log",
        "where JOB_ID = #{0}"
    })
	int deleteByJobId(Integer jobId);

    @Select({
        "select",
        "ID, JOB_ID, START_TIME, END_TIME, STATUS, HINT, LAST_UPDATED",
        "from task_log",
        "where JOB_ID=#{0}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="JOB_ID", property="jobId", jdbcType=JdbcType.INTEGER),
        @Result(column="START_TIME", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="END_TIME", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="HINT", property="hint", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
	List<TaskLog> selectByJobId(Integer jobId);

    @Update({
        "update task_log",
        "set END_TIME = #{2},",
          "STATUS = #{3},",
          "HINT = #{4},",
          "LAST_UPDATED = #{5}",
        "where JOB_ID = #{0} and START_TIME=#{1}"
    })
	int updateByJobIdStarTime(int jobId, Timestamp startTime,Date endTime,int status,String hint,Date lastUpdate);

    @Select({
        "select",
        "ID, JOB_ID, START_TIME, END_TIME, STATUS, HINT, LAST_UPDATED",
        "from task_log",
        "where JOB_ID=#{0}",
        "order by LAST_UPDATED desc limit 1"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="JOB_ID", property="jobId", jdbcType=JdbcType.INTEGER),
        @Result(column="START_TIME", property="startTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="END_TIME", property="endTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="HINT", property="hint", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP)
    })
	TaskLog selectLastLogByJobId(int jobId);
}