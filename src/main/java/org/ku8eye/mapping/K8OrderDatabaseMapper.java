package org.ku8eye.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.domain.K8OrderDatabase;

public interface K8OrderDatabaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Delete({
        "delete from k8order_database",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Insert({
        "insert into k8order_database (id, zone, ",
        "type, version, cluster_count, ",
        "resource_type, storage_type, ",
        "disk_space, database_name, ",
        "username, password, ",
        "url, port, remark, ",
        "security, additional_service, ",
        "k8order_id, user_id, ",
        "remark_admin)",
        "values (#{id,jdbcType=INTEGER}, #{zone,jdbcType=INTEGER}, ",
        "#{type,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, #{clusterCount,jdbcType=INTEGER}, ",
        "#{resourceType,jdbcType=INTEGER}, #{storageType,jdbcType=INTEGER}, ",
        "#{diskSpace,jdbcType=INTEGER}, #{databaseName,jdbcType=VARCHAR}, ",
        "#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{url,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, ",
        "#{security,jdbcType=VARCHAR}, #{additionalService,jdbcType=INTEGER}, ",
        "#{k8orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{remarkAdmin,jdbcType=VARCHAR})"
    })
    int insert(K8OrderDatabase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Select({
        "select",
        "id, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "database_name, username, password, url, port, remark, security, additional_service, ",
        "k8order_id, user_id, remark_admin",
        "from k8order_database",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
        @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
        @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
        @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
        @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
        @Result(column="database_name", property="databaseName", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="port", property="port", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
        @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR)
    })
    K8OrderDatabase selectByPrimaryKey(Integer id);
    
    
    @Select({
        "select",
        "id, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "database_name, username, password, url, port, remark, security, additional_service, ",
        "k8order_id, user_id, remark_admin",
        "from k8order_database",
        "where k8order_id = #{orderId,jdbcType=VARCHAR}"
    })
    @Results({
    	 @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
         @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
         @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
         @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
         @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
         @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
         @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
         @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
         @Result(column="database_name", property="databaseName", jdbcType=JdbcType.VARCHAR),
         @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
         @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
         @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
         @Result(column="port", property="port", jdbcType=JdbcType.INTEGER),
         @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
         @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
         @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
         @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
         @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
         @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR)
    })
    K8OrderDatabase selectByOrderId(String orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Select({
        "select",
        "id, zone, type, version, cluster_count, resource_type, storage_type, disk_space, ",
        "database_name, username, password, url, port, remark, security, additional_service, ",
        "k8order_id, user_id, remark_admin",
        "from k8order_database"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="zone", property="zone", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="version", property="version", jdbcType=JdbcType.VARCHAR),
        @Result(column="cluster_count", property="clusterCount", jdbcType=JdbcType.INTEGER),
        @Result(column="resource_type", property="resourceType", jdbcType=JdbcType.INTEGER),
        @Result(column="storage_type", property="storageType", jdbcType=JdbcType.INTEGER),
        @Result(column="disk_space", property="diskSpace", jdbcType=JdbcType.INTEGER),
        @Result(column="database_name", property="databaseName", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="port", property="port", jdbcType=JdbcType.INTEGER),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="security", property="security", jdbcType=JdbcType.VARCHAR),
        @Result(column="additional_service", property="additionalService", jdbcType=JdbcType.INTEGER),
        @Result(column="k8order_id", property="k8orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark_admin", property="remarkAdmin", jdbcType=JdbcType.VARCHAR)
    })
    List<K8OrderDatabase> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Update({
        "update k8order_database",
        "set zone = #{zone,jdbcType=INTEGER},",
          "type = #{type,jdbcType=INTEGER},",
          "version = #{version,jdbcType=VARCHAR},",
          "cluster_count = #{clusterCount,jdbcType=INTEGER},",
          "resource_type = #{resourceType,jdbcType=INTEGER},",
          "storage_type = #{storageType,jdbcType=INTEGER},",
          "disk_space = #{diskSpace,jdbcType=INTEGER},",
          "database_name = #{databaseName,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR},",
          "port = #{port,jdbcType=INTEGER},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "security = #{security,jdbcType=VARCHAR},",
          "additional_service = #{additionalService,jdbcType=INTEGER},",
          "k8order_id = #{k8orderId,jdbcType=VARCHAR},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "remark_admin = #{remarkAdmin,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(K8OrderDatabase record);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table k8order_database
     *
     * @mbg.generated Wed Jul 26 16:40:45 CST 2017
     */
    @Update({
        "update k8order_database a,k8order b",
        "set b.status = #{status,jdbcType=INTEGER},",
        "remark_admin = #{remarkAdmin,jdbcType=VARCHAR},",
        "start_time = #{startTime,jdbcType=TIMESTAMP}",
        "where a.k8order_id = #{k8orderId,jdbcType=VARCHAR} and a.k8order_id=b.k8order_id"
    })
    int updateByK8OrderId(K8OrderDatabase record);
    
}