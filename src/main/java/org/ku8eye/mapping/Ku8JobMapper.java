package org.ku8eye.mapping;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.ku8eye.Constants;
import org.ku8eye.domain.Ku8Job;

public interface Ku8JobMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_job
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ku8_job",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_job
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ku8_job (ID, TENANT_ID, ",
        "OWNER, NAME, ICON_URL, ",
        "VERSION, RES_PART, ZONE_ID, ",
        "CLUSTER_ID, RES_PARTION_ID, ",
        "STATUS, PROGRESS, ",
        "NOTE, JOB_TYPE, TASK_STATUS, ",
        "CRON_EXPRESSION, LAST_UPDATED, ",
        "JSON_SPEC, PREV_JSON_SPEC)",
        "values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER}, ",
        "#{owner,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{iconUrl,jdbcType=VARCHAR}, ",
        "#{version,jdbcType=CHAR}, #{resPart,jdbcType=VARCHAR}, #{zoneId,jdbcType=INTEGER}, ",
        "#{clusterId,jdbcType=INTEGER}, #{resPartionId,jdbcType=INTEGER}, ",
        "#{status,jdbcType=TINYINT}, #{progress,jdbcType=INTEGER}, ",
        "#{note,jdbcType=VARCHAR}, #{jobType,jdbcType=INTEGER}, #{taskStatus,jdbcType=TINYINT}, ",
        "#{cronExpression,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP}, ",
        "#{jsonSpec,jdbcType=LONGVARCHAR}, #{prevJsonSpec,jdbcType=LONGVARCHAR})"
    })
    int insert(Ku8Job record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_job
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, NAME, ICON_URL, VERSION, RES_PART, ZONE_ID, CLUSTER_ID, ",
        "RES_PARTION_ID, STATUS, PROGRESS, NOTE, JOB_TYPE, TASK_STATUS, CRON_EXPRESSION, ",
        "LAST_UPDATED, JSON_SPEC, PREV_JSON_SPEC",
        "from ku8_job",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="ICON_URL", property="iconUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="VERSION", property="version", jdbcType=JdbcType.CHAR),
        @Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZONE_ID", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="CLUSTER_ID", property="clusterId", jdbcType=JdbcType.INTEGER),
        @Result(column="RES_PARTION_ID", property="resPartionId", jdbcType=JdbcType.INTEGER),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="PROGRESS", property="progress", jdbcType=JdbcType.INTEGER),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOB_TYPE", property="jobType", jdbcType=JdbcType.INTEGER),
        @Result(column="TASK_STATUS", property="taskStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="CRON_EXPRESSION", property="cronExpression", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PREV_JSON_SPEC", property="prevJsonSpec", jdbcType=JdbcType.LONGVARCHAR)
    })
    Ku8Job selectByPrimaryKey(Integer id);
    
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, NAME, ICON_URL, VERSION, RES_PART, ZONE_ID, CLUSTER_ID, ",
        "RES_PARTION_ID, STATUS, PROGRESS, NOTE, JOB_TYPE, TASK_STATUS, CRON_EXPRESSION, ",
        "LAST_UPDATED, JSON_SPEC, PREV_JSON_SPEC",
        "from ku8_job",
        "where TENANT_ID = #{tenant_id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="ICON_URL", property="iconUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="VERSION", property="version", jdbcType=JdbcType.CHAR),
        @Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZONE_ID", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="CLUSTER_ID", property="clusterId", jdbcType=JdbcType.INTEGER),
        @Result(column="RES_PARTION_ID", property="resPartionId", jdbcType=JdbcType.INTEGER),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="PROGRESS", property="progress", jdbcType=JdbcType.INTEGER),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOB_TYPE", property="jobType", jdbcType=JdbcType.INTEGER),
        @Result(column="TASK_STATUS", property="taskStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="CRON_EXPRESSION", property="cronExpression", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PREV_JSON_SPEC", property="prevJsonSpec", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Ku8Job> selectByTenant(Integer tenant_id);
    
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, NAME, ICON_URL, VERSION, RES_PART, ZONE_ID, CLUSTER_ID, ",
        "RES_PARTION_ID, STATUS, PROGRESS, NOTE, JOB_TYPE, TASK_STATUS, CRON_EXPRESSION, ",
        "LAST_UPDATED, JSON_SPEC, PREV_JSON_SPEC",
        "from ku8_job",
        "where OWNER = #{owner,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="ICON_URL", property="iconUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="VERSION", property="version", jdbcType=JdbcType.CHAR),
        @Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZONE_ID", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="CLUSTER_ID", property="clusterId", jdbcType=JdbcType.INTEGER),
        @Result(column="RES_PARTION_ID", property="resPartionId", jdbcType=JdbcType.INTEGER),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="PROGRESS", property="progress", jdbcType=JdbcType.INTEGER),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOB_TYPE", property="jobType", jdbcType=JdbcType.INTEGER),
        @Result(column="TASK_STATUS", property="taskStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="CRON_EXPRESSION", property="cronExpression", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PREV_JSON_SPEC", property="prevJsonSpec", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Ku8Job> selectByOwner(String owner);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_job
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, TENANT_ID, OWNER, NAME, ICON_URL, VERSION, RES_PART, ZONE_ID, CLUSTER_ID, ",
        "RES_PARTION_ID, STATUS, PROGRESS, NOTE, JOB_TYPE, TASK_STATUS, CRON_EXPRESSION, ",
        "LAST_UPDATED, JSON_SPEC, PREV_JSON_SPEC",
        "from ku8_job"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="ICON_URL", property="iconUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="VERSION", property="version", jdbcType=JdbcType.CHAR),
        @Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZONE_ID", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="CLUSTER_ID", property="clusterId", jdbcType=JdbcType.INTEGER),
        @Result(column="RES_PARTION_ID", property="resPartionId", jdbcType=JdbcType.INTEGER),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="PROGRESS", property="progress", jdbcType=JdbcType.INTEGER),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOB_TYPE", property="jobType", jdbcType=JdbcType.INTEGER),
        @Result(column="TASK_STATUS", property="taskStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="CRON_EXPRESSION", property="cronExpression", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PREV_JSON_SPEC", property="prevJsonSpec", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Ku8Job> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ku8_job
     *
     * @mbggenerated
     */
    @Update({
        "update ku8_job",
        "set TENANT_ID = #{tenantId,jdbcType=INTEGER},",
          "OWNER = #{owner,jdbcType=VARCHAR},",
          "NAME = #{name,jdbcType=VARCHAR},",
          "ICON_URL = #{iconUrl,jdbcType=VARCHAR},",
          "VERSION = #{version,jdbcType=CHAR},",
          "RES_PART = #{resPart,jdbcType=VARCHAR},",
          "ZONE_ID = #{zoneId,jdbcType=INTEGER},",
          "CLUSTER_ID = #{clusterId,jdbcType=INTEGER},",
          "RES_PARTION_ID = #{resPartionId,jdbcType=INTEGER},",
          "STATUS = #{status,jdbcType=TINYINT},",
          "PROGRESS = #{progress,jdbcType=INTEGER},",
          "NOTE = #{note,jdbcType=VARCHAR},",
          "JOB_TYPE = #{jobType,jdbcType=INTEGER},",
          "TASK_STATUS = #{taskStatus,jdbcType=TINYINT},",
          "CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},",
          "JSON_SPEC = #{jsonSpec,jdbcType=LONGVARCHAR},",
          "PREV_JSON_SPEC = #{prevJsonSpec,jdbcType=LONGVARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Ku8Job record);
    
    @Update({
        "update ku8_job",
        "set JSON_SPEC = #{jsonSpec,jdbcType=LONGVARCHAR},",
          "PREV_JSON_SPEC = #{prevJsonSpec,jdbcType=LONGVARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateJSON(@Param("id")Integer id, @Param("jsonSpec")String jsonSpec, @Param("prevJsonSpec")String prevJsonSpec);
    
    @Select({
        "select",
        "RES_PART",
        "from ku8_job where JSON_SPEC like #{value,jdbcType=VARCHAR} and status >= 2"
    })
    @Results({
    	@Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR)
    })
    List<String> hasInJSON(@Param("value")String value);

    @Select({
    	"select",
        "ID, TENANT_ID, OWNER, NAME, ICON_URL, VERSION, RES_PART, ZONE_ID, CLUSTER_ID, ",
        "RES_PARTION_ID, STATUS, PROGRESS, NOTE, JOB_TYPE, TASK_STATUS, CRON_EXPRESSION, ",
        "LAST_UPDATED, JSON_SPEC, PREV_JSON_SPEC",
        "from ku8_job",
        "where JOB_TYPE = " + Constants.KU8_SCHEDULED_JOB 
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="TENANT_ID", property="tenantId", jdbcType=JdbcType.INTEGER),
        @Result(column="OWNER", property="owner", jdbcType=JdbcType.VARCHAR),
        @Result(column="NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="ICON_URL", property="iconUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="VERSION", property="version", jdbcType=JdbcType.CHAR),
        @Result(column="RES_PART", property="resPart", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZONE_ID", property="zoneId", jdbcType=JdbcType.INTEGER),
        @Result(column="CLUSTER_ID", property="clusterId", jdbcType=JdbcType.INTEGER),
        @Result(column="RES_PARTION_ID", property="resPartionId", jdbcType=JdbcType.INTEGER),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="PROGRESS", property="progress", jdbcType=JdbcType.INTEGER),
        @Result(column="NOTE", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="JOB_TYPE", property="jobType", jdbcType=JdbcType.INTEGER),
        @Result(column="TASK_STATUS", property="taskStatus", jdbcType=JdbcType.TINYINT),
        @Result(column="CRON_EXPRESSION", property="cronExpression", jdbcType=JdbcType.VARCHAR),
        @Result(column="LAST_UPDATED", property="lastUpdated", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="JSON_SPEC", property="jsonSpec", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="PREV_JSON_SPEC", property="prevJsonSpec", jdbcType=JdbcType.LONGVARCHAR)
    })
	List<Ku8Job> selectScheduleJob();
}